{
    "openapi": "3.0.0",
    "info": {
        "title": "My Application API Documentation",
        "description": "This is the API documentation for My Application.",
        "contact": {
            "email": "support@myapplication.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List user's categories",
                "operationId": "4ee3172edf76bf59671eec6944f00005",
                "responses": {
                    "200": {
                        "description": "A list of the authenticated user's categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaverCategory"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "3037429cac23c8925732f5445d03442b",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Work"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "briefcase-icon",
                                        "nullable": true
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#FF0000",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "operationId": "7df4f8fab9392b7e49da85357146fbd9",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "00f0a1796b3166d6f0fb204acefd9b25",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Personal Updated"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "user-icon",
                                        "nullable": true
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#00FF00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverCategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "58abf73cac3b247fe10dc6f52b297ae9",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Cannot delete category with passwords"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "List all SaverUsers (Admin)",
                "operationId": "15226fc9ecb8f4cc3ee0495c9b3c9f65",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SaverUser"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination meta",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (User is not an admin)"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Get a specific SaverUser (Admin)",
                "operationId": "82050f4ba63a4813d5f8530cb6fdc323",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the SaverUser",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden (Action not allowed or user is not an admin for this specific user view if policy is strict)"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Update a specific SaverUser (Admin)",
                "operationId": "808b428cc056a9282a1dd5429ef9e937",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the SaverUser to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update. Note: password fields are optional.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "updateduser"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "updated@example.com"
                                    },
                                    "password": {
                                        "description": "New password (if changing)",
                                        "type": "string",
                                        "format": "password",
                                        "nullable": true
                                    },
                                    "master_password": {
                                        "description": "New master password (if changing)",
                                        "type": "string",
                                        "format": "password",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Soft delete a specific SaverUser (Admin)",
                "operationId": "788df41fe539f0e054b424f0eefe7024",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the SaverUser to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User soft deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/force/{user_id}": {
            "delete": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Permanently delete a specific SaverUser (Admin)",
                "operationId": "3b6fb8a1771330187f81b2f47cb39c18",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the SaverUser to force delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User permanently deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/restore/{user_id}": {
            "patch": {
                "tags": [
                    "Users (Admin)"
                ],
                "summary": "Restore a soft-deleted SaverUser (Admin)",
                "operationId": "63d671db79e27eb4040ffc790c78e8ce",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the SaverUser to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaverUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SaverCategory": {
                "title": "Saver Category",
                "description": "SaverCategory model",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "description": "Name of the category",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Icon for the category",
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "description": "Color code for the category",
                        "type": "string",
                        "nullable": true
                    },
                    "user_id": {
                        "description": "User ID of the owner",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "deleted_at": {
                        "description": "Deletion timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SaverUser": {
                "title": "Saver User",
                "description": "SaverUser model",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "role": {
                        "description": "User role (e.g., user, admin)",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_login_at": {
                        "description": "Timestamp of last login",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_login_ip": {
                        "description": "IP address of last login",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "last_login_user_agent": {
                        "description": "User agent of last login",
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": [
            {
                "sanctum": []
            }
        ]
    },
    "tags": [
        {
            "name": "Categories",
            "description": "API Endpoints for Managing Saver Categories"
        },
        {
            "name": "Users (Admin)",
            "description": "API Endpoints for Admin User Management of SaverUsers"
        }
    ]
}