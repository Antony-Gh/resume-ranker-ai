services:


  laravel.test:
    build:
      # context: './vendor/laravel/sail/runtimes/8.4'
      # dockerfile: Dockerfile
      context: './'
      dockerfile: ./docker/Dockerfile
      args:
        WWWGROUP: '${WWWGROUP:-1000}'
    image: 'sail-8.4/app'
    container_name: 'laravel-app'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
      - 'host.docker.internal:127.0.0.1'  # Added for better compatibility
    ports:
      - '${APP_PORT:-80}:80'
      # - '3000:3000'  # BrowserSync default port
      # - '3001:3001'  # BrowserSync UI port
    environment:
      WWWUSER: '${WWWUSER:-1000}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
      CHOKIDAR_USEPOLLING: true  # Needed for live reload in Docker
      APACHE_DOCUMENT_ROOT: /var/www/html/public
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped  # Ensures the container restarts if it crashes


  mysql:
    image: 'mysql:8.0'
    container_name: 'laravel-mysql'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-root}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE:-laravel}'
      MYSQL_USER: '${DB_USERNAME:-user}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-password}'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - 'sail-mysql-data:/var/lib/mysql'
      - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - sail
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1', '-p${DB_PASSWORD}']
      retries: 5
      timeout: 5s
      interval: 10s
      start_period: 20s  # Increased to ensure MySQL initializes properly
    restart: unless-stopped




  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin
    ports:
      - "8080:80"  # Map port 8080 on the host to 80 inside the container
    environment:
      PMA_HOST: mysql  # Use the MySQL container's service name
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - sail  # Connect phpMyAdmin to the same network as MySQL
    depends_on:
      - mysql  # Ensure MySQL starts before phpMyAdmin  




  # #Add Node service for asset compilation
  # node:
  #   image: node:18
  #   container_name: node-service
  #   volumes:
  #     - '.:/var/www/html'
  #   working_dir: /var/www/html
  #   command: >
  #     bash -c "npm install && npm run watch"
  #   networks:
  #     - sail

  # redis:
  #   image: 'redis:alpine'
  #   container_name: 'laravel-redis'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - 'sail-redis-data:/data'
  #   command: redis-server --appendonly yes  # Ensures Redis data persistence
  #   networks:
  #     - sail
  #   restart: unless-stopped



  # mailhog:
  #   image: 'mailhog/mailhog:latest'
  #   container_name: 'laravel-mailhog'
  #   ports:
  #     - '${FORWARD_MAILHOG_PORT:-1025}:1025'
  #     - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
  #   networks:
  #     - sail
  #   restart: unless-stopped
  


networks:
  sail:
    driver: bridge


volumes:
  sail-mysql-data:
    driver: local
  sail-redis-data:
    driver: local
