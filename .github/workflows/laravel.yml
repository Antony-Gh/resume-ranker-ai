name: Laravel CI/CD (Linux)

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: resume_ranker_ai
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, json, curl, bcmath
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set up .env File
        run: cp .env.example .env

      - name: Configure Database Connection
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=resume_ranker_ai" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Storage Permissions
        run: |
          chmod -R 777 storage
          chmod -R 777 bootstrap/cache

      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: resume_ranker_ai
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate --force

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Frontend Assets
        run: npm run production

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: resume_ranker_ai
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan test --coverage

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false

      - name: Run PHP Code Sniffer
        run: |
          composer require --dev squizlabs/php_codesniffer
          ./vendor/bin/phpcs --standard=PSR12 app

      - name: Run PHP Static Analysis
        run: |
          composer require --dev phpstan/phpstan
          ./vendor/bin/phpstan analyse app --level=5



